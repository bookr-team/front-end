{"ast":null,"code":"import _classCallCheck from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/src/components/auth/auth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar auth = function auth(App) {\n  return function (LoginPage) {\n    return (\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inherits(_class, _React$Component);\n\n        function _class(props) {\n          var _this;\n\n          _classCallCheck(this, _class);\n\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));\n          _this.state = {\n            loggedIn: false,\n            user: \"\"\n          };\n          _this.props = props;\n          return _this;\n        }\n\n        _createClass(_class, [{\n          key: \"componentDidMount\",\n          value: function componentDidMount() {\n            var user = localStorage.getItem('bookrUser');\n\n            if (user) {\n              this.setState({\n                loggedIn: true,\n                user: user\n              });\n            }\n\n            ;\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            if (props.isLoggedIn) return React.createElement(App, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26\n              },\n              __self: this\n            });\n            return React.createElement(LoginPage, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            });\n          }\n        }]);\n\n        return _class;\n      }(React.Component)\n    );\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, {})(auth);","map":{"version":3,"sources":["/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/src/components/auth/auth.js"],"names":["React","connect","auth","App","LoginPage","props","state","loggedIn","user","localStorage","getItem","setState","isLoggedIn","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,GAAG;AAAA,SAAI,UAAAC,SAAS;AAAA;AAAA;AAAA;AAAA;;AAEzB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACA,gBAAKC,KAAL,GAAa;AACXC,YAAAA,QAAQ,EAAE,KADC;AAEXC,YAAAA,IAAI,EAAE;AAFK,WAAb;AAIA,gBAAKH,KAAL,GAAaA,KAAb;AANiB;AAOlB;;AATwB;AAAA;AAAA,8CAWL;AAClB,gBAAMG,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAb;;AACA,gBAAIF,IAAJ,EAAU;AACR,mBAAKG,QAAL,CAAc;AACZJ,gBAAAA,QAAQ,EAAE,IADE;AAEZC,gBAAAA,IAAI,EAAEA;AAFM,eAAd;AAID;;AAAA;AACF;AAnBwB;AAAA;AAAA,mCAqBhB;AACP,gBAAGH,KAAK,CAACO,UAAT,EAAqB,OAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACrB,mBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAxBwB;;AAAA;AAAA,QACbZ,KAAK,CAACa,SADO;AAAA;AAAA,GAAb;AAAA,CAAhB;;AA2BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAR,KAAK;AAAA,SAAK;AAChCM,IAAAA,UAAU,EAAEN,KAAK,CAACM;AADc,GAAL;AAAA,CAA7B;;AAIA,eAAeX,OAAO,CACpBa,eADoB,EAEpB,EAFoB,CAAP,CAGbZ,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst auth = App => LoginPage => \n  class extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {\n        loggedIn: false,\n        user: \"\"\n      }\n      this.props = props;\n    }\n\n    componentDidMount() {\n      const user = localStorage.getItem('bookrUser');\n      if (user) {\n        this.setState({\n          loggedIn: true,\n          user: user\n        });\n      };\n    }\n\n    render() {\n      if(props.isLoggedIn) return <App />;\n      return <LoginPage />\n    }\n  }\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(auth);"]},"metadata":{},"sourceType":"module"}