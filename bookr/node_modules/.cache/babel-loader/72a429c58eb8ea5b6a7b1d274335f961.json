{"ast":null,"code":"import _objectSpread from \"/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAILURE } from '../actions';\nvar initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  error: '',\n  userName: '',\n  books: [{\n    title: 'Test book1',\n    author: 'Test author 1',\n    publisher: 'Test publisher1',\n    reviews: [{\n      reviewer: 'Test reviewer 1',\n      review: 'this is a good test review 1'\n    }, {\n      reviewer: 'Test reviewer 2',\n      review: 'this is a good test review 2'\n    }]\n  }, {\n    title: 'Test book2',\n    author: 'Test author 2',\n    publisher: 'Test publisher2',\n    reviews: [{\n      reviewer: 'Test reviewer 1',\n      review: 'this is a good test review 3'\n    }, {\n      reviewer: 'Test reviewer 2',\n      review: 'this is a good test review 4'\n    }]\n  }]\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGGED_IN_TRUE:\n      return _objectSpread({}, state, {\n        isLoggedIn: true,\n        userName: action.payload\n      });\n\n    case LOGGED_IN_FALSE:\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        userName: ''\n      });\n\n    case LOGIN_START:\n      return _objectSpread({}, state, {\n        isLoggingIn: true,\n        error: ''\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        userName: action.payload,\n        error: ''\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread({}, state, {\n        isLoggingIn: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/src/store/reducers/index.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","isLoggedIn","isLoggingIn","error","userName","books","title","author","publisher","reviews","reviewer","review","rootReducer","state","action","type","LOGGED_IN_TRUE","payload","LOGGED_IN_FALSE"],"mappings":";AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,YAJP;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,MAAM,EAAE,eAFV;AAGEC,IAAAA,SAAS,EAAE,iBAHb;AAIEC,IAAAA,OAAO,EAAE,CACP;AACIC,MAAAA,QAAQ,EAAE,iBADd;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,QAAQ,EAAE,iBADZ;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALO;AAJX,GADK,EAgBL;AACEL,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,MAAM,EAAE,eAFV;AAGEC,IAAAA,SAAS,EAAE,iBAHb;AAIEC,IAAAA,OAAO,EAAE,CACP;AACIC,MAAAA,QAAQ,EAAE,iBADd;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,QAAQ,EAAE,iBADZ;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALO;AAJX,GAhBK;AALY,CAArB;;AAuCA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,cAAL;AACE,+BACKH,KADL;AAEEZ,QAAAA,UAAU,EAAE,IAFd;AAGEG,QAAAA,QAAQ,EAAEU,MAAM,CAACG;AAHnB;;AAKF,SAAKC,eAAL;AACE,+BACKL,KADL;AAEEZ,QAAAA,UAAU,EAAE,KAFd;AAGEG,QAAAA,QAAQ,EAAE;AAHZ;;AAKF,SAAKP,WAAL;AACE,+BACKgB,KADL;AAEEX,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKL,aAAL;AACE,+BACKe,KADL;AAEEX,QAAAA,WAAW,EAAE,KAFf;AAGED,QAAAA,UAAU,EAAE,IAHd;AAIEG,QAAAA,QAAQ,EAAEU,MAAM,CAACG,OAJnB;AAKEd,QAAAA,KAAK,EAAE;AALT;;AAOF,SAAKJ,aAAL;AACE,+BACKc,KADL;AAEEX,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,KAAK,EAAEW,MAAM,CAACG;AAHhB;;AAKF;AACE,aAAOJ,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,WAAf","sourcesContent":["import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE\n} from '../actions';\n\nconst initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  error: '',\n  userName: '',\n  books: [\n    {\n      title: 'Test book1',\n      author: 'Test author 1',\n      publisher: 'Test publisher1',\n      reviews: [\n        {\n            reviewer: 'Test reviewer 1',\n            review: 'this is a good test review 1'\n        },\n        {\n          reviewer: 'Test reviewer 2',\n          review: 'this is a good test review 2'\n        }\n      ]\n    },\n    {\n      title: 'Test book2',\n      author: 'Test author 2',\n      publisher: 'Test publisher2',\n      reviews: [\n        {\n            reviewer: 'Test reviewer 1',\n            review: 'this is a good test review 3'\n        },\n        {\n          reviewer: 'Test reviewer 2',\n          review: 'this is a good test review 4'\n        }\n      ]\n    }\n  ]\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGGED_IN_TRUE:\n      return {\n        ...state,\n        isLoggedIn: true,\n        userName: action.payload\n      }\n    case LOGGED_IN_FALSE:\n      return {\n        ...state,\n        isLoggedIn: false,\n        userName: ''\n      }\n    case LOGIN_START:\n      return {\n        ...state,\n        isLoggingIn: true,\n        error: ''\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        userName: action.payload,\n        error: ''\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        error: action.payload\n      }\n    default: \n      return state;\n  }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}