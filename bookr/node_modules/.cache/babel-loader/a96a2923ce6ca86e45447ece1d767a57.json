{"ast":null,"code":"export var LOGIN_START = 'LOGIN_START';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport var LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport var LOGGED_IN_FALSE = 'LOGGED_IN_FALSE';\nexport var LOGGED_IN_TRUE = 'LOGGED_IN_TRUE';\nexport var checkCurrentLogin = function checkCurrentLogin() {\n  return function (dispatch) {\n    userName = localStorage.getItem('bookrUser');\n    userName ? dispatch({\n      type: LOGGED_IN_TRUE,\n      payload: userName\n    }) : dispatch({\n      type: LOGGED_IN_FALSE\n    });\n  };\n};\nexport var login = function login(userName) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_START\n    }); // LOGIN ACTION\n\n    localStorage.setItem('bookrUser', userName); // todo: cases if login success or fail\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: userName\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kenny/Documents/lambda/git/Build-Week-Bookr/front-end/bookr/src/store/actions/loginActions.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGGED_IN_FALSE","LOGGED_IN_TRUE","checkCurrentLogin","dispatch","userName","localStorage","getItem","type","payload","login","setItem"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACjDC,IAAAA,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AACAF,IAAAA,QAAQ,GACRD,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEN,cAAR;AAAwBO,MAAAA,OAAO,EAAEJ;AAAjC,KAAD,CADA,GAEND,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAFV;AAGD,GALgC;AAAA,CAA1B;AAOP,OAAO,IAAMS,KAAK,GAAG,SAARA,KAAQ,CAACL,QAAD;AAAA,SAAc,UAAAD,QAAQ,EAAI;AAC7CA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR,CAD6C,CAE7C;;AACAQ,IAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCN,QAAlC,EAH6C,CAI7C;;AACAD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,aAAR;AAAuBU,MAAAA,OAAO,EAAEJ;AAAhC,KAAD,CAAR;AACD,GANoB;AAAA,CAAd","sourcesContent":["export const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGGED_IN_FALSE = 'LOGGED_IN_FALSE';\nexport const LOGGED_IN_TRUE = 'LOGGED_IN_TRUE';\n\nexport const checkCurrentLogin = () => dispatch => {\n  userName = localStorage.getItem('bookrUser');\n  userName ?\n  dispatch({ type: LOGGED_IN_TRUE, payload: userName})\n  : dispatch({ type: LOGGED_IN_FALSE})\n}\n\nexport const login = (userName) => dispatch => {\n  dispatch({ type: LOGIN_START });\n  // LOGIN ACTION\n  localStorage.setItem('bookrUser', userName);\n  // todo: cases if login success or fail\n  dispatch({ type: LOGIN_SUCCESS, payload: userName });\n}"]},"metadata":{},"sourceType":"module"}